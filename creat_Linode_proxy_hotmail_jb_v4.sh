#!/bin/bash
set -e

# --- Ki·ªÉm tra 3proxy ƒë√£ c√†i ƒë·∫∑t ch∆∞a ---
if ! [ -f /usr/local/etc/3proxy/bin/3proxy ]; then
  echo "‚ùå 3proxy kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t ·ªü /usr/local/etc/3proxy/bin/3proxy."
  echo "Ch·∫°y script c√†i ƒë·∫∑t 3proxy tr∆∞·ªõc khi ti·∫øp t·ª•c."
  exit 1
fi

# --- TƒÉng ulimits n·∫øu c·∫ßn ---
CURRENT_ULIMIT=$(ulimit -n)
if [ "$CURRENT_ULIMIT" -lt 20000 ]; then
  echo "‚ö†Ô∏è ulimits qu√° th·∫•p ($CURRENT_ULIMIT). TƒÉng l√™n 524288..."
  echo -e "* soft nofile 524288\n* hard nofile 524288" | sudo tee -a /etc/security/limits.conf
  sudo sed -i '/DefaultLimitNOFILE=/d' /etc/systemd/system.conf
  sudo sed -i '/DefaultLimitNOFILE=/d' /etc/systemd/user.conf
  echo "DefaultLimitNOFILE=524288:524288" | sudo tee -a /etc/systemd/system.conf
  echo "DefaultLimitNOFILE=524288:524288" | sudo tee -a /etc/systemd/user.conf
  sudo systemctl daemon-reexec
  ulimit -n 524288
  NEW_ULIMIT=$(ulimit -n)
  if [ "$NEW_ULIMIT" -lt 20000 ]; then
    echo "‚ùå Kh√¥ng th·ªÉ ƒë·∫∑t ulimits th√†nh 524288 (hi·ªán t·∫°i: $NEW_ULIMIT)."
    echo "H√£y ƒëƒÉng xu·∫•t v√† ƒëƒÉng nh·∫≠p l·∫°i, ho·∫∑c ch·∫°y 'sudo reboot' v√† th·ª≠ l·∫°i."
    echo "Sau khi reboot, ch·∫°y l·∫°i script: bash $0 <IPv4> [IPv6_PREFIX] <IPV4_BASE_PORT> [IPV6_BASE_PORT] <IPV4_COUNT> [IPV6_COUNT]"
    exit 1
  fi
fi

# --- C·∫§U H√åNH ƒê·∫¶U V√ÄO ---
# H·ªó tr·ª£ 2 ch·∫ø ƒë·ªô:
# - IPv4-only: bash $0 <IPv4> - <IPV4_BASE_PORT> - <IPV4_COUNT> -
# - IPv4+IPv6: bash $0 <IPv4> <IPv6_PREFIX> <IPV4_BASE_PORT> <IPV6_BASE_PORT> <IPV4_COUNT> <IPV6_COUNT>
if [ -z "$1" ] || [ -z "$3" ] || [ -z "$5" ]; then
  echo "‚ùå C√∫ ph√°p:"
  echo "   IPv4-only : bash $0 <IPv4> - <IPV4_BASE_PORT> - <IPV4_COUNT> -"
  echo "   IPv4+IPv6 : bash $0 <IPv4> <IPv6_PREFIX> <IPV4_BASE_PORT> <IPV6_BASE_PORT> <IPV4_COUNT> <IPV6_COUNT>"
  exit 1
fi

IPV4="$1"
IPV6_PREFIX="$2"
IPV4_BASE_PORT="$3"
IPV6_BASE_PORT="${4:-}"
IPV4_COUNT="$5"
IPV6_COUNT="${6:-}"

# X√°c ƒë·ªãnh c√≥ b·∫≠t IPv6 kh√¥ng (khi c√≥ prefix v√† count > 0)
ENABLE_IPV6=0
if [ -n "$IPV6_PREFIX" ] && [ "$IPV6_PREFIX" != "-" ] && [ -n "$IPV6_COUNT" ] && [ "$IPV6_COUNT" != "0" ] && [ "$IPV6_COUNT" != "-" ]; then
  ENABLE_IPV6=1
fi

# Ki·ªÉm tra ƒë·∫ßu v√†o l√† s·ªë nguy√™n
if ! [[ "$IPV4_BASE_PORT" =~ ^[0-9]+$ ]] || ! [[ "$IPV4_COUNT" =~ ^[0-9]+$ ]]; then
  echo "‚ùå C√°c tham s·ªë IPV4_BASE_PORT, IPV4_COUNT ph·∫£i l√† s·ªë nguy√™n!"
  exit 1
fi
if [ "$ENABLE_IPV6" -eq 1 ]; then
  if [ -z "$IPV6_BASE_PORT" ] || ! [[ "$IPV6_BASE_PORT" =~ ^[0-9]+$ ]] || ! [[ "$IPV6_COUNT" =~ ^[0-9]+$ ]]; then
    echo "‚ùå Khi b·∫≠t IPv6, c·∫ßn IPV6_BASE_PORT v√† IPV6_COUNT l√† s·ªë nguy√™n!"
    exit 1
  fi
fi

# --- Th∆∞ m·ª•c l∆∞u tr·ªØ ---
WORKDIR="/home/proxy-installer"
WORKDATA="$WORKDIR/data.txt"
PROXY_TXT="$WORKDIR/proxy.txt"
CONFIG_PATH="/usr/local/etc/3proxy/3proxy.cfg"

mkdir -p "$WORKDIR"
cd "$WORKDIR"
> "$WORKDATA"
> "$PROXY_TXT"

# --- T√¨m interface m·∫°ng ch√≠nh ---
NET_IF=$(ip -4 route get 1.1.1.1 | awk '{print $5}')
echo "‚úÖ S·ª≠ d·ª•ng interface: $NET_IF"

# --- K√Ω t·ª± h·ª£p l·ªá cho user/pass ---
CHARS='A-Za-z0-9@_-'

# --- M·∫£ng hex v√† h√†m sinh ƒëo·∫°n IPv6 ---
array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
ip64() { echo "${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}"; }
generate_ipv6() { echo "$IPV6_PREFIX:$(ip64):$(ip64):$(ip64):$(ip64)"; }

# --- T·∫°o proxy IPv4 ---
echo "‚úÖ T·∫°o $IPV4_COUNT proxy IPv4..."
IPV4_LAST_PORT=$((IPV4_BASE_PORT + IPV4_COUNT - 1))
for i in $(seq 1 "$IPV4_COUNT"); do
  PORT=$((IPV4_BASE_PORT + i - 1))
  # user c√≥ √≠t nh·∫•t 1 k√Ω t·ª± ƒë·∫∑c bi·ªát
  while true; do
    USER_RAW=$(tr -dc A-Za-z0-9 </dev/urandom | head -c6)
    SPECIAL=$(tr -dc '@_-' </dev/urandom | head -c2)
    USER="${USER_RAW}${SPECIAL}"
    echo "$USER" | grep -q '[@_-]' && break
  done
  # pass c√≥ √≠t nh·∫•t 1 k√Ω t·ª± ƒë·∫∑c bi·ªát
  while true; do
    PASS=$(tr -dc "$CHARS" </dev/urandom | head -c10)
    echo "$PASS" | grep -q '[@_-]' && break
  done

  if [ "$ENABLE_IPV6" -eq 1 ]; then
    IP6=$(generate_ipv6)
    echo "$USER/$PASS/$IPV4/$PORT/-/$IP6" >> "$WORKDATA"
  else
    # Kh√¥ng d√πng IPv6: ƒë·∫∑t c·∫£ tr∆∞·ªùng IPv6 l√† '-'
    echo "$USER/$PASS/$IPV4/$PORT/-/-" >> "$WORKDATA"
  fi
done

# --- T·∫°o proxy IPv6 (ch·ªâ khi b·∫≠t IPv6) ---
if [ "$ENABLE_IPV6" -eq 1 ]; then
  echo "‚úÖ T·∫°o $IPV6_COUNT proxy IPv6..."
  IPV6_LAST_PORT=$((IPV6_BASE_PORT + IPV6_COUNT - 1))
  for i in $(seq 1 "$IPV6_COUNT"); do
    PORT=$((IPV6_BASE_PORT + i - 1))
    # user c√≥ √≠t nh·∫•t 1 k√Ω t·ª± ƒë·∫∑c bi·ªát
    while true; do
      USER_RAW=$(tr -dc A-Za-z0-9 </dev/urandom | head -c6)
      SPECIAL=$(tr -dc '@%&^_+-' </dev/urandom | head -c2)
      USER="${USER_RAW}${SPECIAL}"
      echo "$USER" | grep -q '[@%&^_+-]' && break
    done
    # pass c√≥ √≠t nh·∫•t 1 k√Ω t·ª± ƒë·∫∑c bi·ªát
    while true; do
      PASS=$(tr -dc "$CHARS" </dev/urandom | head -c10)
      echo "$PASS" | grep -q '[@%&^_+-]' && break
    done
    IP6=$(generate_ipv6)
    echo "$USER/$PASS/$IPV4/$PORT/$IP6/-" >> "$WORKDATA"
  done
fi

# --- T·∫°o script th√™m IPv6 (ch·ªâ khi b·∫≠t IPv6) ---
if [ "$ENABLE_IPV6" -eq 1 ]; then
  echo "‚úÖ T·∫°o script th√™m IPv6..."
  cat >"${WORKDIR}/boot_ifconfig.sh" <<EOF
#!/bin/bash
while IFS="/" read -r _ _ _ _ ip6_ipv4 ip6_ipv6; do
  if [ "\$ip6_ipv4" != "-" ]; then
    ip -6 addr add \$ip6_ipv4/64 dev $NET_IF && echo "success" || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ g√°n IPv6: \$ip6_ipv4"
  fi
  if [ "\$ip6_ipv6" != "-" ]; then
    ip -6 addr add \$ip6_ipv6/64 dev $NET_IF && echo "success" || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ g√°n IPv6: \$ip6_ipv6"
  fi
done < "$WORKDATA"
EOF
  chmod +x "${WORKDIR}/boot_ifconfig.sh"

  # --- G√°n ƒë·ªãa ch·ªâ IPv6 ---
  echo "‚úÖ G√°n ƒë·ªãa ch·ªâ IPv6..."
  bash "${WORKDIR}/boot_ifconfig.sh"
fi

# --- T·∫°o c·∫•u h√¨nh 3proxy ---
{
  echo "maxconn 10000"
  echo "nscache 65536"
  echo "timeouts 1 5 30 60 180 1800 15 60"
  echo "setgid 65535"
  echo "setuid 65535"
  echo "flush"
  echo -n "users "
  awk -F "/" '{gsub(/[:\\]/, "\\\\&", $2); printf "%s:CL:%s ", $1, $2}' "$WORKDATA"
  echo ""
  echo "auth strong"
  echo "allow *"

  # D√≤ng proxy cho IPv4: n·∫øu kh√¥ng c√≥ IPv6-out, ch·ªâ -e IPv4; n·∫øu c√≥ IPv6-out, th√™m -e IPv6
  awk -F "/" '$5 == "-" {
    cmd = "proxy -n -a -p"$4" -i0.0.0.0 -i:: -e"$3
    if ($6 != "-") cmd = cmd" -e"$6
    print cmd
  }' "$WORKDATA"

  # D√≤ng proxy cho IPv6 (khi c√≥ $5 l√† IPv6-out)
  awk -F "/" '$5 != "-" {print "proxy -6 -n -a -p"$4" -i0.0.0.0 -e"$5}' "$WORKDATA"

} > "$CONFIG_PATH"
chmod 644 "$CONFIG_PATH"

# --- S·ª≠a file d·ªãch v·ª• systemd ---
cat << EOF > /etc/systemd/system/3proxy.service
[Unit]
Description=3proxy Proxy Server
After=network.target

[Service]
Type=simple
Environment=CONFIGFILE=/usr/local/etc/3proxy/3proxy.cfg
ExecStart=/usr/local/etc/3proxy/bin/3proxy \$CONFIGFILE
Restart=always
RestartSec=1
KillMode=process
KillSignal=SIGKILL

[Install]
WantedBy=multi-user.target
EOF

# --- M·ªü firewall v√† iptables ---
if systemctl is-active --quiet firewalld; then
  firewall-cmd --permanent --add-port="${IPV4_BASE_PORT}-${IPV4_LAST_PORT}/tcp" || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü firewall cho IPv4 ports"
  if [ "$ENABLE_IPV6" -eq 1 ]; then
    firewall-cmd --permanent --add-port="${IPV6_BASE_PORT}-${IPV6_LAST_PORT}/tcp" || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü firewall cho IPv6 ports"
  fi
  firewall-cmd --reload && echo "success" || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ reload firewall"
fi

for port in $(awk -F "/" '{print $4}' "$WORKDATA" | sort -u); do
  iptables -I INPUT -p tcp --dport "${port}" -j ACCEPT || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü iptables cho c·ªïng $port"
  if [ "$ENABLE_IPV6" -eq 1 ]; then
    ip6tables -I INPUT -p tcp --dport "${port}" -j ACCEPT || echo "‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü ip6tables cho c·ªïng $port"
  fi
done

# --- Kh·ªüi ƒë·ªông l·∫°i 3proxy ---
echo "üîÅ Restart 3proxy..."
systemctl daemon-reload
systemctl enable 3proxy
systemctl restart 3proxy || {
  echo "‚ùå L·ªói: Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông 3proxy. Ki·ªÉm tra log b·∫±ng: journalctl -u 3proxy"
  exit 1
}

# --- Ki·ªÉm tra tr·∫°ng th√°i 3proxy ---
if systemctl is-active --quiet 3proxy; then
  echo "‚úÖ D·ªãch v·ª• 3proxy ƒëang ch·∫°y."
else
  echo "‚ùå D·ªãch v·ª• 3proxy kh√¥ng ch·∫°y. Ki·ªÉm tra log b·∫±ng: journalctl -u 3proxy"
  exit 1
fi

# --- Xu·∫•t proxy.txt (ch·ªâ v·ªõi IPv4) ---
while IFS="/" read -r USER PASS IP4 PORT IP6_IP4 IP6_IPV6; do
  echo "${USER}:${PASS}:${IP4}:${PORT}" >> "$PROXY_TXT"
done < "$WORKDATA"

echo "‚úÖ ƒê√£ t·∫°o $IPV4_COUNT proxy IPv4 (c·ªïng $IPV4_BASE_PORT-$IPV4_LAST_PORT)"
if [ "$ENABLE_IPV6" -eq 1 ]; then
  echo "‚úÖ ƒê√£ t·∫°o $IPV6_COUNT proxy IPv6 (c·ªïng $IPV6_BASE_PORT-$IPV6_LAST_PORT)"
fi
echo "üìÑ File proxy: $PROXY_TXT"
cat "$PROXY_TXT"
echo "Install Done"
